version: "3.1"

services:

  backend:
    build: backend
    ports:
      - "3000:3000"
    volumes:
      - ui-volume:/frontend
    networks:
      - spamtube-prodnet
    depends_on:
      migrate:
        condition: service_completed_successfully

  build-ui:
    build: frontend
    command: ["npm", "run", "build"]
    networks:
      - spamtube-prodnet
    volumes:
      - ui-volume:/app

  migrate:
    build: database
    networks:
      - spamtube-prodnet
    environment:
      DATABASE_URL: postgres://postgres:postgres@pg-spamtube/spamtube_db_prod?sslmode=disable
    depends_on:
      pg-spamtube:
        condition: service_healthy

  pg-spamtube:
    image: postgres:10.3
    restart: always
    networks:
      - spamtube-prodnet
    environment:
      POSTGRES_DB: spamtube_db_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  ui-volume:

networks:
  spamtube-prodnet:
    driver: bridge
